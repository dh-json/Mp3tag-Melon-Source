[Include]=Melon#.inc
[IndexUrl]=https://www.melon.com/search/song/index.htm?section=all&searchGnbYn=Y&kkoSpl=&kkoDpType=&q=
[AlbumUrl]=https://www.melon.com/song/detail.htm?songId=
[IndexFormat]=%_url%|%Title%|%Artist%|%_preview%|%Album%
[SearchBy]=Title||%title%||%s||Artist||%artist%||+%s

[ParserScriptIndex]=...
# ###################################################################
# This script parses the webpage for all releases
# by this albumname.
#
# The output format is defined by IndexFormat above, which
# is used by the selection dialog
# ###################################################################
#debug "on" "debug_melon_search_song.txt"
#debugWriteInput "debug-input_melon_search_song.html"

FindLine "<tbody>"
Do
  # _url
  FindLine "melon.link.goSongDetail"
  Unspace
  FindInLine "melon.link.goSongDetail('"
  SayUntil "');"
  KillTag "a"
  Say "|"

  # Title
  FindLine "title="
  KillTag "span"
  RegexpReplace "<[^>]+>" ""
  Unspace
  SayRest
  Say "|"

  # Artist/Multiple Artists/Various Artists
  FindLine "artistName"
  FindLine "<div"
  JoinUntil "</div>"
  RegexpReplace "<span.*" ""
  RegexpReplace "<[^>]+>" ""
  Unspace
  SayRest
  Say "|"

  # _preview
  FindLine "goAlbumDetail"
  Say "https://www.melon.com/album/detail.htm?albumId="
  Unspace
  FindInLine "goAlbumDetail('"
  SayUntil "');"
  Say "|"

  # Album
  RegexpReplace "<[^>]+>" ""
  SayRest
  SayNewLine
  
  FindLine "<tr " 1 1
  Unspace
While "<tr "

[ParserScriptAlbum]=...
# ###################################################################
# This script parses the albums page for all common information.
#
# The current output variable is set via the outputto command
# All these fields are used by the confirm online information dialog
# ###################################################################
#debug "on" "debug_melon_parse_song.txt"
#debugWriteInput "debug-input_melon_parse_song.html"

# CoverArt
FindLine "<meta property=\"og:image\""

# ChangeSize
RegexpReplace "(_)(\d+)(.jpg+)" "_1000.jpg"
#RegexpReplace "(\w+\.\w+)\?.*" "$1"
Unspace
FindInLine "content=\""
OutputTo "coverurl"
SayUntil "\""

# Title
FindLine "<div id=\"conts"
FindLine "song_name"
JoinUntil "</div>"
Replace "<strong class=\"none\">곡명</strong>" ""
RegexpReplace "<[^>]+>" ""
Unspace
OutputTo "Title"
SayRest

# AlbumArtist/Multiple Artists/Various Artists
FindLine "artist"
JoinUntil "</div>"
RegexpReplace "<[^>]+>" ""
Unspace
OutputTo "Artist"
SayRest

# Album
FindLine "goAlbumDetail"
RegexpReplace "<[^>]+>" ""
Unspace
OutputTo "Album"
SayRest

FindLine "<dt>발매일</dt>"
FindLine "<dd"
Unspace
IfNot "-"
  OutputTo "Year"
  # Year
  RegexpReplace "<[^>]+>" ""
  SayUntil "."
  # Date
  #RegexpReplace "[^0-9]" ""
  #SayRest
endif


# Genre
FindLine "<dt>장르</dt>"
FindLine "<dd"
RegexpReplace "<[^>]+>" ""
Unspace
IfNot "-"
  OutputTo "Genre"
endif
SayRest

# Lyrics
FindLine "section_lyric"
FindLine "<div class=\"lyric"
Unspace
If "<div class=\"lyric\""
  JoinUntil "</div>"
  RegexpReplace "<br>" "\r\n"
  RegexpReplace "<[^>]+>" ""
  OutputTo "Unsyncedlyrics"
  SayRest
endif

FindLine "<!-- 작사 / 작곡"
MoveLine 2
Unspace
IfNot "<!-- //작사 / 작곡"
  MoveLine 7
  Unspace
  # Lyricist
  IfNot "<!-- 작곡가 정보"
  OutputTo "Lyricist"
    Do
      FindLine "li"
      FindLine "작사"
      MoveLine -3
      RegexpReplace "<[^>]+>" ""
      Unspace
      SayRest
      
      FindLine "</li>"
      MoveLine 2
      Unspace
      If "<li>"
        Say ", "
      endif
    While "<li>"
  endif

  # Composer
  FindLine "<!-- 작곡가 정보"
  Unspace
  If "<!-- 작곡가 정보"
    OutputTo "Composer"
    Do
      FindLine "li"
      FindLine "작곡"
      MoveLine -3
      RegexpReplace "<[^>]+>" ""
      Unspace
      SayRest

      FindLine "</li>"
      MoveLine 2
      Unspace
      If "<li>"
        Say ", "
      endif
    While "<li>"
  endif
endif