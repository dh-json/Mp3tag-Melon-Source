[Include]=Melon#.inc
[IndexUrl]=https://www.melon.com/search/song/index.htm?section=song&searchGnbYn=Y&kkoSpl=N&kkoDpType=&sort=ganada&q=
[AlbumUrl]=https://www.melon.com/song/detail.htm?songId=
[IndexFormat]=%_url%|%Title%|%Artist%|%_preview%|%Album%
[SearchBy]=Title||%title%||%s

[ParserScriptIndex]=...
# ###################################################################
# This script parses the webpage for all releases
# by this albumname.
#
# The output format is defined by IndexFormat above, which
# is used by the selection dialog
# ###################################################################
#debug "on" "debug_melon_search_song.txt"
#debugWriteInput "debug-input_melon_search_song.txt"

FindLine "<tbody>"

Do
  # _url
  FindLine "melon.link.goSongDetail"
  Unspace
  FindInLine "melon.link.goSongDetail('"
  SayUntil "');"
  KillTag "a"
  Say "|"

  # Title
  FindLine "title="
  KillTag "span"
  RegexpReplace "<[^>]+>" ""
  Unspace
  SayRest
  Say "|"

  # Artist/Multiple Artists/Various Artists
  FindLine "artistName"
  FindLine "<div"
  JoinUntil "</div>"
  RegexpReplace "<span.*" ""
  RegexpReplace "<[^>]+>" ""
  Unspace
  SayRest
  Say "|"

  # _preview
  FindLine "goAlbumDetail"
  Say "https://www.melon.com/album/detail.htm?albumId="
  Unspace
  FindInLine "goAlbumDetail('"
  SayUntil "');"
  Say "|"

  # Album
  RegexpReplace "<[^>]+>" ""
  SayRest
  SayNewLine
  
  FindLine "<tr " 1 1
  Unspace
While "<tr "

[ParserScriptAlbum]=...
# ###################################################################
# This script parses the albums page for all common information.
#
# The current output variable is set via the outputto command
# All these fields are used by the confirm online information dialog
# ###################################################################
#debug "on" "debug_melon_parse_song.txt"
#debugWriteInput "debug-input_melon_parse_song.txt"

# CoverArt
OutputTo "coverurl"
FindLine "<meta property=\"og:image\""
Unspace

# ChangeSize
RegexpReplace "(_)(\d+)(.jpg+)" "_1000.jpg"
RegexpReplace "(\w+\.\w+)\?.*" "$1"
FindInLine "content=\""
SayUntil "\""

# Title
OutputTo "Title"
FindLine "<strong class=\"none\">"
MoveLine 5
Unspace
SayRest

# Artist
OutputTo "Artist"
FindLine "<div class=\""
FindInLine "<div class=\""
MoveLine 2
Unspace
RegexpReplace "<[^>]+>" ""
SayRest

# Album
OutputTo "Album"
FindLine "<dt>앨범</dt>"
MoveLine 1
Unspace
RegexpReplace "<[^>]+>" ""
SayRest

OutputTo "Year"
FindLine "<dt>발매일</dt>"
MoveLine 1
Unspace
# Year
RegexpReplace "<[^>]+>" ""
SayUntil "."
# Date
#RegexpReplace "[^0-9]" ""
#SayRest

# Genre
OutputTo "Genre"
FindLine "<dt>장르</dt>"
MoveLine 1
Unspace
RegexpReplace "<[^>]+>" ""
SayRest

# Lyrics
FindLine "<div class=\"wrap_lyric\" id=\"lyricArea\">"
MoveLine 1
FindLine "<div"
Unspace
IfNot "<div class="lyric_none">"
  OutputTo "Unsyncedlyrics"
  MoveLine 1
  RegexpReplace "<[^>]+>" "\r\n"
  SayRest
endif

# Lyricist
OutputTo "Lyricist"
FindLine "작사가 정보"
MoveLine 3
Unspace
If "<li"
  Do
    FindLine "<span class=\"type\">작사"
    MoveLine -4
    FindLine "<div class=\"ellipsis artist"
    FindLine "melon.link.goArtistDetail"
    RegexpReplace "<[^>]+>" ""
    SayRest
    FindLine "</li>"
    MoveLine 2
    Unspace

    If "<li>"
      Say ", "
    endif
  While "<li>"
else
  MoveLine -3
endif

# Composer
OutputTo "Composer"
FindLine "작곡가 정보"
MoveLine 3
Unspace
If "<li"
  Do
    FindLine "<span class=\"type\">작곡"
    MoveLine -4
    FindLine "<div class=\"ellipsis artist"
    FindLine "melon.link.goArtistDetail"
    RegexpReplace "<[^>]+>" ""
    SayRest
    FindLine "</li>"
    MoveLine 2
    Unspace

    If "<li>"
      Say ", "
    endif
  While "<li>"
else
  MoveLine -3
endif